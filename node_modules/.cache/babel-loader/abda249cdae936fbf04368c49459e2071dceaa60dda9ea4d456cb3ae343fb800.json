{"ast":null,"code":"var _jsxFileName = \"/Users/jiaweiyao/Documents/GitHub/mutual-insurance/src/Company/CompanyRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport UnemploymentInsuranceContract from '../smart-contract/UnemploymentInsurance.json'; // Import the compiled contract ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyRegistration = () => {\n  _s();\n  const [companyName, setCompanyName] = useState('');\n  const [hrWallet, setHrWallet] = useState('');\n  const [status, setStatus] = useState('');\n  const handleRegistration = async () => {\n    try {\n      setStatus('Waiting for transaction to be mined...');\n      const web3 = new Web3(Web3.givenProvider || 'http://localhost:8545'); // Initialize Web3\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = UnemploymentInsuranceContract.networks[networkId];\n      const contractInstance = new web3.eth.Contract(UnemploymentInsuranceContract.abi, deployedNetwork && deployedNetwork.address);\n      const accounts = await web3.eth.getAccounts();\n      const ownerAccount = accounts[0]; // Assuming the owner's account is the first account in the array\n\n      await contractInstance.methods.registerCompany(companyName, hrWallet).send({\n        from: ownerAccount\n      });\n      setStatus('Company registered successfully!');\n    } catch (error) {\n      console.error('Error registering company:', error);\n      setStatus('Error: Please check the console for details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Company Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"companyName\",\n        children: \"Company Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"companyName\",\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hrWallet\",\n        children: \"HR Wallet Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"hrWallet\",\n        value: hrWallet,\n        onChange: e => setHrWallet(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegistration,\n      children: \"Register Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(CompanyRegistration, \"5INdkLnkmOsQ0HW3hueOsbdVAM4=\");\n_c = CompanyRegistration;\nexport default CompanyRegistration;\nvar _c;\n$RefreshReg$(_c, \"CompanyRegistration\");","map":{"version":3,"names":["React","useState","Web3","UnemploymentInsuranceContract","jsxDEV","_jsxDEV","CompanyRegistration","_s","companyName","setCompanyName","hrWallet","setHrWallet","status","setStatus","handleRegistration","web3","givenProvider","networkId","eth","net","getId","deployedNetwork","networks","contractInstance","Contract","abi","address","accounts","getAccounts","ownerAccount","methods","registerCompany","send","from","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/jiaweiyao/Documents/GitHub/mutual-insurance/src/Company/CompanyRegistration.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Web3 from 'web3';\nimport UnemploymentInsuranceContract from '../smart-contract/UnemploymentInsurance.json'; // Import the compiled contract ABI\n\nconst CompanyRegistration = () => {\n    const [companyName, setCompanyName] = useState('');\n    const [hrWallet, setHrWallet] = useState('');\n    const [status, setStatus] = useState('');\n\n    const handleRegistration = async () => {\n        try {\n            setStatus('Waiting for transaction to be mined...');\n            const web3 = new Web3(Web3.givenProvider || 'http://localhost:8545'); // Initialize Web3\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = UnemploymentInsuranceContract.networks[networkId];\n            const contractInstance = new web3.eth.Contract(\n                UnemploymentInsuranceContract.abi,\n                deployedNetwork && deployedNetwork.address\n            );\n\n            const accounts = await web3.eth.getAccounts();\n            const ownerAccount = accounts[0]; // Assuming the owner's account is the first account in the array\n\n            await contractInstance.methods.registerCompany(companyName, hrWallet).send({ from: ownerAccount });\n\n            setStatus('Company registered successfully!');\n        } catch (error) {\n            console.error('Error registering company:', error);\n            setStatus('Error: Please check the console for details.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Company Registration</h2>\n            <div>\n                <label htmlFor=\"companyName\">Company Name:</label>\n                <input\n                    type=\"text\"\n                    id=\"companyName\"\n                    value={companyName}\n                    onChange={(e) => setCompanyName(e.target.value)}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"hrWallet\">HR Wallet Address:</label>\n                <input\n                    type=\"text\"\n                    id=\"hrWallet\"\n                    value={hrWallet}\n                    onChange={(e) => setHrWallet(e.target.value)}\n                />\n            </div>\n            <button onClick={handleRegistration}>Register Company</button>\n            <div>{status}</div>\n        </div>\n    );\n};\n\nexport default CompanyRegistration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}