{"ast":null,"code":"var _jsxFileName = \"/Users/jiaweiyao/Documents/GitHub/mutual-insurance/src/Company/CompanyRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport UnemploymentInsuranceABI from '../smart-contract/UnemploymentInsuranceABI.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyRegistrationForm() {\n  _s();\n  const [companyName, setCompanyName] = useState('');\n  const [hrWalletAddress, setHrWalletAddress] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleCompanyNameChange = event => {\n    setCompanyName(event.target.value);\n  };\n  const handleHrWalletAddressChange = event => {\n    setHrWalletAddress(event.target.value);\n  };\n  const registerCompany = async () => {\n    try {\n      setStatusMessage('');\n      setLoading(true);\n      if (window.ethereum) {\n        await window.ethereum.enable();\n      }\n      const web3 = new Web3(window.ethereum || 'http://localhost:8545');\n      const contractInstance = new web3.eth.Contract(UnemploymentInsuranceABI, '0x4420cb0d64b112e7292f9d5c387fd68b817f1709') // Replace with your contract address\n      ;\n      const accounts = await web3.eth.getAccounts();\n      const ownerAddress = accounts[0];\n      await contractInstance.methods.registerCompany(companyName, hrWalletAddress).send({\n        from: ownerAddress\n      });\n      setStatusMessage('Company registered successfully!');\n    } catch (error) {\n      setStatusMessage(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register a Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        registerCompany();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Company Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: companyName,\n          onChange: handleCompanyNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"HR Wallet Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: hrWalletAddress,\n          onChange: handleHrWalletAddressChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Loading...' : 'Register Company'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(CompanyRegistrationForm, \"0FuTOIK8W9TmZ+QB9hIpojAyrB8=\");\n_c = CompanyRegistrationForm;\nexport default CompanyRegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"CompanyRegistrationForm\");","map":{"version":3,"names":["React","useState","Web3","UnemploymentInsuranceABI","jsxDEV","_jsxDEV","CompanyRegistrationForm","_s","companyName","setCompanyName","hrWalletAddress","setHrWalletAddress","statusMessage","setStatusMessage","loading","setLoading","handleCompanyNameChange","event","target","value","handleHrWalletAddressChange","registerCompany","window","ethereum","enable","web3","contractInstance","eth","Contract","accounts","getAccounts","ownerAddress","methods","send","from","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","onChange","disabled","_c","$RefreshReg$"],"sources":["/Users/jiaweiyao/Documents/GitHub/mutual-insurance/src/Company/CompanyRegistration.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Web3 from 'web3';\nimport UnemploymentInsuranceABI from '../smart-contract/UnemploymentInsuranceABI.json';\n\nfunction CompanyRegistrationForm() {\n  const [companyName, setCompanyName] = useState('');\n  const [hrWalletAddress, setHrWalletAddress] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleCompanyNameChange = (event) => {\n    setCompanyName(event.target.value);\n  };\n\n  const handleHrWalletAddressChange = (event) => {\n    setHrWalletAddress(event.target.value);\n  };\n\n  const registerCompany = async () => {\n    try {\n      setStatusMessage('');\n      setLoading(true);\n\n      if (window.ethereum) {\n        await window.ethereum.enable();\n      }\n\n      const web3 = new Web3(window.ethereum || 'http://localhost:8545');\n      const contractInstance = new web3.eth.Contract(\n        UnemploymentInsuranceABI,\n        '0x4420cb0d64b112e7292f9d5c387fd68b817f1709', // Replace with your contract address\n      );\n\n      const accounts = await web3.eth.getAccounts();\n      const ownerAddress = accounts[0];\n\n      await contractInstance.methods.registerCompany(companyName, hrWalletAddress).send({\n        from: ownerAddress,\n      });\n\n      setStatusMessage('Company registered successfully!');\n    } catch (error) {\n      setStatusMessage(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Register a Company</h2>\n      <form onSubmit={(e) => { e.preventDefault(); registerCompany(); }}>\n        <label>\n          Company Name:\n          <input\n            type=\"text\"\n            value={companyName}\n            onChange={handleCompanyNameChange}\n          />\n        </label>\n        <br />\n        <label>\n          HR Wallet Address:\n          <input\n            type=\"text\"\n            value={hrWalletAddress}\n            onChange={handleHrWalletAddressChange}\n          />\n        </label>\n        <br />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Loading...' : 'Register Company'}\n        </button>\n      </form>\n      <div>{statusMessage}</div>\n    </div>\n  );\n}\n\nexport default CompanyRegistrationForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}