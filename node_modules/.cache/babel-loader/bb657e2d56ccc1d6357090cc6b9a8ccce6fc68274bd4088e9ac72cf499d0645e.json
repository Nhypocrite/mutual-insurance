{"ast":null,"code":"var _jsxFileName = \"/Users/jiaweiyao/Documents/GitHub/mutual-insurance/src/Company/CompanyRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport UnemploymentInsuranceContract from '../smart-contract/UnemploymentInsurance.json'; // Import the compiled contract ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyRegistration = () => {\n  _s();\n  const [userAddress, setUserAddress] = useState('');\n  const [web3, setWeb3] = useState(null);\n  const [roundContract, setRoundContract] = useState(null);\n  const [companyName, setCompanyName] = useState('');\n  const [hrWallet, setHrWallet] = useState('');\n  const [status, setStatus] = useState('');\n  const initializeWeb3 = async () => {\n    try {\n      // Initialize Web3 with Ganache provider\n      const web3Instance = new Web3('http://127.0.0.1:8545');\n\n      // Fetch user accounts from Ganache\n      const accounts = await web3Instance.eth.getAccounts();\n\n      // Set user address\n      setUserAddress(accounts[0]);\n\n      // Set Web3 instance\n      setWeb3(web3Instance);\n\n      // Initialize contract instance\n      const deployedNetwork = UnemploymentInsuranceContract.networks['<<CONTRACT_NETWORK_ID>>']; // Replace <<CONTRACT_NETWORK_ID>> with the actual network ID\n      const roundContractInstance = new web3Instance.eth.Contract(UnemploymentInsuranceContract.abi, deployedNetwork && deployedNetwork.address);\n      setRoundContract(roundContractInstance);\n    } catch (error) {\n      console.error(\"Failed to connect to Ganache:\", error);\n    }\n  };\n  const handleRegistration = async () => {\n    try {\n      setStatus('Waiting for transaction to be mined...');\n      await roundContract.methods.registerCompany(companyName, hrWallet).send({\n        from: userAddress\n      });\n      setStatus('Company registered successfully!');\n    } catch (error) {\n      console.error('Error registering company:', error);\n      setStatus('Error: Please check the console for details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Company Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"companyName\",\n        children: \"Company Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"companyName\",\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hrWallet\",\n        children: \"HR Wallet Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"hrWallet\",\n        value: hrWallet,\n        onChange: e => setHrWallet(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegistration,\n      children: \"Register Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"User Address: \", userAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(CompanyRegistration, \"uYIj0oLse2Q/p8NI1lbPkqCUuVA=\");\n_c = CompanyRegistration;\nexport default CompanyRegistration;\nvar _c;\n$RefreshReg$(_c, \"CompanyRegistration\");","map":{"version":3,"names":["React","useState","Web3","UnemploymentInsuranceContract","jsxDEV","_jsxDEV","CompanyRegistration","_s","userAddress","setUserAddress","web3","setWeb3","roundContract","setRoundContract","companyName","setCompanyName","hrWallet","setHrWallet","status","setStatus","initializeWeb3","web3Instance","accounts","eth","getAccounts","deployedNetwork","networks","roundContractInstance","Contract","abi","address","error","console","handleRegistration","methods","registerCompany","send","from","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/jiaweiyao/Documents/GitHub/mutual-insurance/src/Company/CompanyRegistration.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Web3 from 'web3';\nimport UnemploymentInsuranceContract from '../smart-contract/UnemploymentInsurance.json'; // Import the compiled contract ABI\n\nconst CompanyRegistration = () => {\n    const [userAddress, setUserAddress] = useState('');\n    const [web3, setWeb3] = useState(null);\n    const [roundContract, setRoundContract] = useState(null);\n    const [companyName, setCompanyName] = useState('');\n    const [hrWallet, setHrWallet] = useState('');\n    const [status, setStatus] = useState('');\n\n    const initializeWeb3 = async () => {\n        try {\n            // Initialize Web3 with Ganache provider\n            const web3Instance = new Web3('http://127.0.0.1:8545');\n\n            // Fetch user accounts from Ganache\n            const accounts = await web3Instance.eth.getAccounts();\n            \n            // Set user address\n            setUserAddress(accounts[0]);\n            \n            // Set Web3 instance\n            setWeb3(web3Instance);\n\n            // Initialize contract instance\n            const deployedNetwork = UnemploymentInsuranceContract.networks['<<CONTRACT_NETWORK_ID>>']; // Replace <<CONTRACT_NETWORK_ID>> with the actual network ID\n            const roundContractInstance = new web3Instance.eth.Contract(\n                UnemploymentInsuranceContract.abi,\n                deployedNetwork && deployedNetwork.address\n            );\n            setRoundContract(roundContractInstance);\n        } catch (error) {\n            console.error(\"Failed to connect to Ganache:\", error);\n        }\n    };\n\n    const handleRegistration = async () => {\n        try {\n            setStatus('Waiting for transaction to be mined...');\n            await roundContract.methods.registerCompany(companyName, hrWallet).send({ from: userAddress });\n            setStatus('Company registered successfully!');\n        } catch (error) {\n            console.error('Error registering company:', error);\n            setStatus('Error: Please check the console for details.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Company Registration</h2>\n            <div>\n                <label htmlFor=\"companyName\">Company Name:</label>\n                <input\n                    type=\"text\"\n                    id=\"companyName\"\n                    value={companyName}\n                    onChange={(e) => setCompanyName(e.target.value)}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"hrWallet\">HR Wallet Address:</label>\n                <input\n                    type=\"text\"\n                    id=\"hrWallet\"\n                    value={hrWallet}\n                    onChange={(e) => setHrWallet(e.target.value)}\n                />\n            </div>\n            <button onClick={handleRegistration}>Register Company</button>\n            <div>{status}</div>\n            <div>User Address: {userAddress}</div>\n        </div>\n    );\n};\n\nexport default CompanyRegistration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}